generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Turma {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  Aluno     Aluno[]
  Chamada   Chamada[]
  Aula      Aula[]
}

model Aluno {
  id        String   @id @default(cuid())
  turmaId   String
  nome      String
  email     String?
  createdAt DateTime @default(now())

  Turma Turma         @relation(fields: [turmaId], references: [id], onDelete: Cascade)
  Itens ChamadaItem[]

  @@index([turmaId, nome])
}

model Chamada {
  id        String   @id @default(cuid())
  turmaId   String
  date      DateTime @default(now())
  conteudo  String?
  createdAt DateTime @default(now())

  Turma Turma         @relation(fields: [turmaId], references: [id], onDelete: Cascade)
  Itens ChamadaItem[]

  @@index([turmaId, date])
}

model ChamadaItem {
  id        String  @id @default(cuid())
  chamadaId String
  alunoId   String
  presente  Boolean @default(true)

  Chamada Chamada @relation(fields: [chamadaId], references: [id], onDelete: Cascade)
  Aluno   Aluno   @relation(fields: [alunoId], references: [id], onDelete: Cascade)

  @@unique([chamadaId, alunoId])
}

model Aula {
  id        String   @id @default(cuid())
  turmaId   String
  numero    Int
  titulo    String
  createdAt DateTime @default(now())

  Turma Turma @relation(fields: [turmaId], references: [id], onDelete: Cascade)

  @@unique([turmaId, numero])
  @@index([turmaId, numero])
}
